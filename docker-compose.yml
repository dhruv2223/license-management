services:
  spark-master:
    image: bitnami/spark:3.4
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - your_network

  spark-worker-1:
    image: bitnami/spark:3.4
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"
    networks:
      - your_network

  spark-worker-2:
    image: bitnami/spark:3.4
    container_name: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - your_network

  client-db:
    image: postgres:14-alpine
    container_name: client-db
    environment:
      - POSTGRES_DB=clientdb
      - POSTGRES_USER=client_user
      - POSTGRES_PASSWORD=client_pass
    volumes:
      - client-db-data:/var/lib/postgresql/data
      - ./db/init/client_schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - your_network

  kaksha-db:
    image: postgres:14-alpine
    container_name: kaksha-db
    environment:
      - POSTGRES_DB=kakshadb
      - POSTGRES_USER=kaksha_user
      - POSTGRES_PASSWORD=kaksha_pass
    volumes:
      - kaksha-db-data:/var/lib/postgresql/data
      - ./db/init/kaksha_schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"
    networks:
      - your_network

  prefect-db:
    image: postgres:14-alpine
    container_name: prefect-db
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    ports:
      - "5434:5432"
    volumes:
      - prefect_db_data:/var/lib/postgresql/data
    networks:
      - your_network

  prefect-server:
    image: prefecthq/prefect:3.4.7-python3.9
    container_name: prefect-server
    ports:
      - "4200:4200"
    command: prefect server start --host 0.0.0.0
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:prefect@prefect-db:5432/prefect
    volumes:
      - prefect_data:/root/.prefect
    networks:
      - your_network
    depends_on:
      - prefect-db

  license-flow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: license-flow
    depends_on:
      - spark-master
      - spark-worker-1
      - spark-worker-2
      - client-db
      - kaksha-db
    env_file:
      - .env
    environment:
      - TZ=Asia/Kolkata
      - PREFECT_API_URL=http://prefect-server:4200/api
    volumes:
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock # <== Add this line
    networks:
      - your_network

    command: >
      bash -c "  
      apt update;
      apt install curl -y;
      echo 'Waiting for Prefect Server...';
      until curl  http://prefect-server:4200/api/health | grep -i 'true'; do
      sleep 2;
      done;
      prefect worker start --pool process-pool 
      ";

  # Optional: Keep this if you want a separate process worker

networks:
  your_network:
    driver: bridge

volumes:
  client-db-data:
  kaksha-db-data:
  prefect_data: # Added volume for Prefect server data
  prefect_db_data:
